workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always

image: node:latest

stages:
  - deploy_dev
  - deploy_test
  - deploy_prod

cache:
  key: default
  paths:
    - web/node_modules/
    - functions/node_modules

before_script:
  - npm i -g firebase-tools
  - npm i -g n

deploy_dev_functions:
  stage: deploy_dev
  environment: dev
  rules:
    - changes:
        - functions/**/*
  script:
    - echo "there are functions to deploy"

deploy_dev_firestore:
  stage: deploy_dev
  environment: dev
  rules:
    - changes:
        - firestore.rules
        - firestore.indexes.json
  script:
    - firebase use --token $FIREBASE_TOKEN dev
    - firebase deploy -m "pipeline $CI_PIPELINE_ID build $CI_BUILD_ID firestore" --non-interactive --token $FIREBASE_TOKEN --only firestore

deploy_dev:
  stage: deploy_dev
  environment: dev
  script:
    - n current
    - cd web
    - npm install
    - npm run build
    - cd ..
    - n 10
    - cd functions
    - npm install
    - npm functions build
    - cd ..
    - firebase use --token $FIREBASE_TOKEN dev
    - firebase deploy -m "pipeline $CI_PIPELINE_ID build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN --only hosting

deploy_test_firestore:
  stage: deploy_test
  environment: test
  rules:
    - changes:
        - firestore.rules
        - firestore.indexes.json
  script:
    - firebase use --token $FIREBASE_TOKEN test
    - firebase deploy -m "pipeline $CI_PIPELINE_ID build firestore" --non-interactive --token $FIREBASE_TOKEN --only firestore

deploy_test:
  stage: deploy_test
  environment: test
  script:
    - n current
    - cd web
    - npm install
    - npm run build
    - cd ..
    - n 10
    - cd functions
    - npm install
    - npm run build
    - cd ..
    - firebase use --token $FIREBASE_TOKEN test
    - firebase deploy -m "pipeline $CI_PIPELINE_ID build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN --only hosting

deploy_prod_firestore:
  stage: deploy_prod
  environment: prod
  rules:
    - changes:
        - firestore.rules
        - firestore.indexes.json
      when: manual
  script:
    - firebase use --token $FIREBASE_TOKEN prod
    - firebase deploy -m "pipeline $CI_PIPELINE_ID build firestore" --non-interactive --token $FIREBASE_TOKEN --only firestore

deploy_prod:
  stage: deploy_prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
  environment:
    name: prod
  script:
    - n current
    - cd web
    - npm install
    - npm run build
    - cd ..
    - n 10
    - cd functions
    - npm install
    - npm run build
    - cd ..
    - firebase use --token $FIREBASE_TOKEN prod
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, Build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN --only hosting
